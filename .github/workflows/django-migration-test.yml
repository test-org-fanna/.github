name: Django Migration Check

on:
  workflow_call:
    inputs:
      # Required
      postgres_db:
        type: string
        required: true
      postgres_user:
        type: string
        required: true
      postgres_host:
        type: string
        required: true
      # Giving from caller workflow matrix
      python_version:
        type: string
        required: true
      poetry_version:
        type: string
        required: true
      # Optional
      working_directory:
        type: string
        description: Whenever the django app (i.e. manage.py) is not in the root; the location can be specified here
        default: ./
    secrets:
      postgres_password:
        required: true

jobs:
  test-migrations:
    name: Django Migration Check
    runs-on: ubuntu-latest

    services:
      # This service requires that variables and secrets are defined on GitHub (see README)
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: ${{ inputs.postgres_db }}
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Load cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ inputs.working_directory }}/.venv
            /github/home/.local
          key: cache-python-${{ inputs.python_version }}-poetry-${{ inputs.poetry_version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Add cache to path
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "/github/home/.local/bin" >> $GITHUB_PATH

      - name: Install Poetry
        if: steps.cache.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Check Django Migrations
        working-directory: ${{ inputs.working_directory }}
        run: |
          MIGRATION_MSG=$(poetry run python manage.py makemigrations --dry-run 2>&1 )
          if [[ "$MIGRATION_MSG" != 'No changes detected' ]]; then
            echo "<h2>:no_entry_sign: Migration check failed </h2>" >> $GITHUB_STEP_SUMMARY
            echo "<h3>The message:</h3>" >> $GITHUB_STEP_SUMMARY
            echo "$MIGRATION_MSG" >> $GITHUB_STEP_SUMMARY
            exit 3
          fi
        env:
          CI: true
          SQL_DATABASE: ${{ inputs.postgres_db }}
          SQL_USER: ${{ inputs.postgres_user }}
          SQL_HOST: ${{ inputs.postgres_host }}
          SQL_PASSWORD: ${{ secrets.postgres_password }}
          SQL_PORT: 5432
