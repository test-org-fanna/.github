name: Docker build and push

on:
  workflow_call:
    inputs:
      tag:
        description: The Semantic Versioning tag (generated in a different workflow)
        type: string
        required: true
      dockerfile_name:
        type: string
        required: true
    secrets:
      docker_hub_username:
        required: true
      docker_hub_token:
        required: true
      docker_secret_1:
      docker_secret_2: #TODO: multiple secrets: hier een oplossing voor bedenken
      docker_secret_3:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Sets the docker image tag according to the file system structure of Dockerhub with versioning
      # Examples:
      # - standard Dockerfile: thehubusername/repositoryfoobar:v1.0.1.beta.3
      # - with name (i.e. Dockerfile.foobar): thehubusername/repositoryfoobar-helloworld:v1.0.1.beta.3
      # - Repowered example: repowered/platform-django:v1.0.1.beta.3
      - name: Set docker image tag for '${{ inputs.dockerfile_name }}'
        env:
          hub_repo: ${{ secrets.docker_hub_username }}/${{ github.event.repository.name }}
        run: |
          DOCKERFILE=${{ inputs.dockerfile_name }}
          DOCKERFILE_NAME=$(echo $DOCKERFILE | sed 's/Dockerfile./-/;s/Dockerfile//')
          echo "IMAGE_TAG=${{ env.hub_repo }}${DOCKERFILE_NAME}:${{ inputs.tag }}" >> $GITHUB_ENV

      #  Log in to the desired docker hub space
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_token }}

      # Build the Dockerfile(s) with the image tag in the correct format and push to the hub
      - name: Build ${{ inputs.dockerfile_name }} and push with tag
        uses: docker/build-push-action@v6
        # Add ALL the secret(s) (if any) to the environment variable using a multi-line value and enable them below
        env:
          SECRETS: "|
              FIRST_SECRET=${{ secrets.docker_secret_1 }}
              SECOND_SECRET=${{ secrets.docker_secret_2 }}
              THIRD_SECRET=${{ secrets.docker_secret_3 }}" #TODO: hier een oplossing voor bedenken
        with:
          context: "{{defaultContext}}:./"
          file: ${{ inputs.dockerfile_name }}
          push: ${{ github.event_name == 'does not exist' }} #temp
          tags: ${{ env.IMAGE_TAG }}
          secrets: ${{ env.SECRETS }}
